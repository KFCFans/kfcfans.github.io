<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on OhMyScheduler</title>
    <link>https://kfcfans.github.io/docs/</link>
    <description>Recent content in Docs on OhMyScheduler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://kfcfans.github.io/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>开发计划</title>
      <link>https://kfcfans.github.io/docs/todo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kfcfans.github.io/docs/todo/</guid>
      <description>截止目前（v1.2.0），框架的基本功能（调度和分布式计算）已经趋于稳定，大家可以放心接入使用。不过为了使框架更为成熟易用，仍有需要不断改进和开发的地方。  下阶段规划  支持DAG工作流 任务的优先级系统，需要可抢占式实现，而不是SchedulerX那种傻等式 在线日志的限流 &amp;amp; 本地数据库分表提升在线日志最大吞吐量 保护性判断（优先级较低，太繁琐了且意义不大，毕竟面向开发者，大家不会乱填参数对不对～）  共同建设邀请 (❁´◡`❁)✲ﾟ 都看到这里了，相比您对本项目产生了浓厚的兴趣，欢迎加入开源社区，为框架贡献自己的力量～
（PR、Issue求求了～）
如果有什么想法、建议或意见，都欢迎联系作者：tengjiqi@gmail.com。
上一页  下一页  </description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>https://kfcfans.github.io/docs/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kfcfans.github.io/docs/faq/</guid>
      <description>这里记录一些好问题和高频问题。  Q：生成环境能用吗？ A：可以。框架从发布到现在已经趋于稳定，且开发者@KFCFans当前有充足的时间维护框架，一旦发现bug，可以联系我，保证第一时间修复！
Q：请问，有没有通过API增删改查执行的操作？ A：OpenAPI就是为此而生的。OpenAPI在Http的基础上进行了封装，提供规范的接口完成任务的管理与运维。
Q：Ignite也支持分布式计算，请问这个项目有什么优势？ A：从本质上讲，OhMyScheduler是一个具有分布式计算能力的调度平台，而Ignite是一个分布式计算平台，前者立足于调度（虽然本项目的亮点是分布式计算没错啦…），后者立足于大数据计算，两者立足点不同。
从分布式计算的角度来讲，Ignite确实具备全部OhMyScheduler的功能（毕竟人家是Apache顶级项目&amp;hellip;），OhMyScheduler-Worker集群可以看成嵌入式的Ignite集群，整体对外提供服务。两者虽然表面上功能有所重合，但背后的设计理念是截然不同的。
Ignite本质上是由分布式内存SQL数据库发展而来的分布式计算平台，它解决的问题更偏向于大数据处理（Spark、Hadoop之类），因此对于传统的Java项目并不是非常友好，比如官方推荐的部署模式是建立独立的Ignite集群负责计算，业务应用只负责提交代码。再比如获取各种资源（Spring Bean）都需要先注入Ignite中，这对于依赖繁杂的业务来说是非常痛苦的。
而OhMyScheduler就是面向业务应用设计的，从示例代码中也能看出，开发OhMyScheduler的处理器是没有任何额外的成本的，想要某个SpringBean，直接注入即可。想要分发任务，调用map方法即可，开发者的学习和使用成本会低很多。
一句话总结就是：Ignite的分布式计算偏向于数据侧，适用于大数据处理。而OhMyScheduler的分布式计算偏向于业务侧，适用于传统Java应用的业务处理。
此外，高效开发一直是OhMyScheduler的设计理念，像在线查看任务运行情况、在线查看任务运行日志等功能，在实际开发中将会非常实用。
上一页  下一页  </description>
    </item>
    
  </channel>
</rss>